<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

       <!--进行扫包-->
       <context:component-scan base-package="com.bus">
              <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
              <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
       </context:component-scan>
       <bean class="com.bus.customerResoverEx.ExceptionResolve" id="handlerExceptionResolver"></bean>
       <!--添加操作器-->
       <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
              <property name="interceptors">
                     <list>
                            <bean class="com.bus.interceptors.impl.InterceptorServlet">
                                   <property name="interceptorses">
                                          <array>
                                                 <bean class="com.bus.interceptors.impl.WebInterceptor">
                                                 </bean>
                                                 <bean class="com.bus.interceptors.impl.MInterceptor"/>
                                                 <!--       <bean class="com.bus.interceptors.MoreSubmitInterceptor"/>-->
                                          </array>
                                   </property>
                                   <property name="exclusivePath">
                                          <array>
                                                 <value>/api/logout</value>
                                                 <value>/web-v/logout</value>
                                                 <value>/web-v/login</value>
                                                 <value>/api/login</value>
                                                 <value>/api/qqLogin</value>
                                          </array>
                                   </property>
                            </bean>
                     </list>
              </property>
       </bean>
       <bean id="validator"
             class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
              <property name="providerClass"  value="org.hibernate.validator.HibernateValidator"/>
              <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
       </bean>
<!--
       <bean id="conversionService" class="org.springframework.samples.petclinic.util.PetclinicConversionServiceFactory" />
-->

       <!--添加操作器适配器-->
       <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
              <property name="cacheSeconds" value="0"/>
              <property name="messageConverters" ref="messageConverters"/>
              <property name="webBindingInitializer">
                     <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                            <property name="validator" ref="validator" />
                     </bean>
              </property>
              <!--<property name="customArgumentResolvers">
                     <list>
                            <bean class="org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor">
                                   <constructor-arg value="true"></constructor-arg>
                            </bean>

                     </list>
              </property>-->
       </bean>
       <!--消息转换器定义-->
       <util:list id="messageConverters">
              <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
              <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                     <property name="defaultCharset" ref="utf8Charset"></property>
                     <property name="supportedMediaTypes">
                            <list>
                                   <value>application/json;charset=UTF-8</value>
                                   <value>text/html;charset=UTF-8</value>
                            </list>
                     </property>
              </bean>
              <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
              <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
              <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
              <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
              <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                     <property name="supportedMediaTypes">
                            <list>
                                   <value>application/json;charset=UTF-8</value>
                                   <value>text/html;charset=UTF-8</value>
                            </list>
                     </property>
                     <property name="defaultCharset" ref="utf8Charset"></property>
              </bean>
       </util:list>
       <bean id="utf8Charset" class="java.nio.charset.Charset" factory-method="forName">
              <constructor-arg value="UTF-8" />
       </bean>
       <!--文件上传支持-->
       <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
              <property name="defaultEncoding" value="UTF-8"/>
              <property name="maxUploadSize" value="41943040"/>
              <property name="maxInMemorySize" value="40900"/>
       </bean>

       <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
              <property name="templateLoaderPath" value="/WEB-INF/web/"/>
              <property name="defaultEncoding" value="utf-8"/>
              <property name="freemarkerSettings">
                     <props>
                            <prop key="locale">zh_CN</prop>
                            <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                            <prop key="date_format">yyyy-MM-dd</prop>
                            <prop key="default_encoding">UTF-8</prop>
                            <!--<prop key="number_format">#.##</prop>-->
                     </props>
              </property>
       </bean>
       <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
              <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
              <property name="suffix" value=".html"/>
              <property name="order" value="0"/>
              <property name="contentType" value="text/html;charset=UTF-8"/><!-- 解决网页中文乱码的问题 -->
       </bean>


       <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <!--
                               这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 &ndash;&gt;
              -->
              <property name="prefix" value="/WEB-INF/module/" />
              <property name="suffix" value=".jsp" />
              <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
              <property name="contentType" value="text/html;charset=UTF-8"/>
              <property name="order" value="0"></property>
       </bean>

       <mvc:default-servlet-handler/>


       <mvc:resources mapping="/static/**" location="/static/" order="0" />

       <import resource="spring-profiles.xml"/>


       <!-- 开启shiro的注解支持 -->
       <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
              <!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->
              <property name="proxyTargetClass" value="true"></property>
       </bean>
       <!-- 使用shiro框架提供的切面类，用于创建代理对象 -->
       <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>
</beans>